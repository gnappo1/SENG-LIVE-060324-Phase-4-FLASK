"""add columns to author

Revision ID: 80579caaec26
Revises: 33e8b2d69560
Create Date: 2024-03-29 11:59:36.311307

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '80579caaec26'
down_revision: Union[str, None] = '33e8b2d69560'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('owners', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('phone', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('address', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('update_at', sa.DateTime(), nullable=True))
        batch_op.create_unique_constraint(batch_op.f('uq_owners_email'), ['email'])
        batch_op.create_unique_constraint(batch_op.f('uq_owners_phone'), ['phone'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('owners', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_owners_phone'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_owners_email'), type_='unique')
        batch_op.drop_column('update_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('address')
        batch_op.drop_column('phone')
        batch_op.drop_column('email')
        batch_op.drop_column('name')

    # ### end Alembic commands ###
